select * from produto where descricao like '%pavillion%'   (qualquer coisa antes e depois de pavillion importa se é M ou m)
select * from produto where descricao ilike '%pavillion%'   (qualquer coisa antes e depois de pavillion independente de M e m)

select * from produto where descricao like '%HD';	   (qualquer produto que termina com HD)
select * from produto where descricao like 'HD%';	   (qualquer produto que começa com HD)
select * from produto where descricao like 'HD %';	   (qualquer produto que começa com sómente HD)

select * from produto where descricao like 'HD % 500%GB%';     (sómente HD de 500 G)

select * from produto where descricao like '%HD % 500%GB%';	(nesse caso pq tem NB antes)

select * from produto where descricao like '%HD % 500%GB%MAXTOR%';

select * from produto where (lower(descricao) like '%hd %maxtor%');

select * from produto where (descricao like upper('%hd %maxtor%'));

select * from produto where (upper(descricao) like upper('%hd %maxtor%');

select * from produto where descricao ilike '%hd %maxtor%'); ------------


	      +--------------+
palavra chave |  hd maxtor   |
              +--------------+

select * from produto where descricao like '%'||replayce('hd maxtor',' ','%')||'%';   

select count(*) from produto where descricao like 'HD %500%';   (relatorio gerencial renomear campo pra aparecer quantidade)

slect count(*) from programa;       (numericamente todos canais quant)


-------------------------------------BANCO 1----------------------------------------

slect count(*) from programa where canal = 'PLA';

select * from programa where programa = 'PLA';        (todos)
select count(*) from programa where programa = 'PLA'; (quantos)
select count(distinct nome) from programa where programa = 'PLA';  (unicos canais sem repetir)

------------------------------------------------------------------------------------

NAVENET

select preco from produto where descricao like 'HD %MAXTOR%' order by preco asc limit 1.  (a mais barata)

select min(preco) from produto where descricao like 'HD %MAXTOR%'; (msm coisa ^)
select max(preco) from produto where descricao like 'HD %MAXTOR%'; (mais caro)


select min(preco) as menos_preco from produto where descricao like 'HD %MAXTOR%';
select max(preco) as maior_preco from produto where descricao like 'HD %MAXTOR%';
select avg(preco) as preco_medio from produto where descricao like 'HD %MAXTOR%';


		(todas HD Maxtor com menor preço)  (pega todas HD maxtor e que tem o msm preço da menor HD)
select *						<-	sub select coluna
	from produto					<-	sub select tabela
	where						<-	sub select variavel(?)
	     (descricao like 'HD %MAXTOR%') and
	     (preco = (select min(preco)
			 from produto
			 where descricao like 'HD %MAXTOR%');


Selecionar todas variaves
		do produto
		onde
		são iguais a HD Maxtor e
		preço seja igual ao minimo
			do produto
			HD Maxtor.

select * from produto where (descricao like 'HD %MAXTOR%') and (preco = (select min(preco) from produto where descricao
like 'HD %MAXTOR%');


mostrar as pilhas cujo preço é inferior ao preço médio das pilhas

select * from produto where (descricao like '%PILHAS%') and (preco < (select avg(preco) from produto where 
descricao like '%PILHAS%'));


select *
	from
	    (select *
		    from produto
		    where descricao like 'HD %MAXTOR%')as tmp1
	     where preco <30;


		(mostra a ou as com preço minimo(s) media e maximo //pode ter duas com msm preço)
select
    (select min(preco)
	 from produto 
	 where descricao like 'HD %MAXTOR%') as minimo,
    (select avg(preco)
	 from produto 
	 where descricao like 'HD %MAXTOR%') as media,
    (select max(preco)
	 from produto 
	 where descricao like 'HD %MAXTOR%') as maximo;


--------------------------------------------------------------------------------------------------------

Banco Ing

select * from deposito where saldo between 900 and 1000;
select * from deposito where (saldo >= 900) and ( saldo <= 1000);

select * from deposito where saldo not between 900 and 1000; 
select * from deposito where not ((saldo >= 900) and ( saldo <= 1000));
select * from deposito where (saldo < 900) and ( saldo > 1000);


select distinct nome_agencia from deposito;   (listar o nome das agencias que possuem contas)

select nome_agencia from deposito group by nome_agencia; (msm coisa ^) 

+------ Group By ----------+ 
|msm função que o distinct |  
+--------------------------+

select nome_agencia,count(*) as quantidade from deposito group by nome_agencia; (separa em grupos e mostra a quantidade de gp
										 com o msm nome)

					( tem como por desc e asc ou sem nenhum)
select nome_agencia,count(*) as quantidade from deposito group by nome_agencia order by quantidade desc;


select nome_agencia,avg(saldo) as media from deposito group by nome_agencia; 


insert into deposito values ('Downtown',999,'Johnson',550);

select nome_agencia, count(distinct nome_cliente) from deposito group by nome_agencia; (quantos cliente distintos kd agencia tem)


select nome_agencia, count(*) as quantidade from deposito group by nome_agencia;

select nome_agencia, count(*) as quantidade from (select deposito where quantidade >= 2 group by nome_agencia)
as tmp1 where quantidade >=2;

+------ Having --------+ 
|é o where do group by |  
+----------------------+


select nome_agencia, count(*) as quantidade from deposito group by nome_agencia having count(*) >= 2;

mostrar o nome das agencias com o saldo total maior que 2000

select nome_agencia,sum(saldo) as total from deposito group by nome_agencia having sum(saldo) >= 1000;

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

2019-1

Banco do HistoricoEscolar

DROP TABLE AlunoDisciplina;
DROP TABLE CursoDisciplina;
DROP TABLE Disciplina;
DROP TABLE Curso;
DROP TABLE Aluno;

Create Table Aluno(
	Matricula char(8) not null,
	Nome varchar(50) not null,
	CPF char(11) not null,
	RG varchar(20) not null,
	Nascimento date not null check (nascimento <= now()),
	Naturalidade varchar(50) not null,
	Nacionalidade varchar(50) not null,
	Filiacao varchar(100) not null,
	Genero char(1) not null check ((genero = 'M') or (Genero = 'F')),
	ObrigacaoEleitoral boolean,
	ObrigacaoMilitar boolean,
	DataIngresso date not null default now() check (DataIngresso <= now()),
	DataConclusao date check ( DataConclusao <= NOW()),
	SituacaoAcademica char(1) not null default 'R' check ((SituacaoAcademica = 'R') or (SituacaoAcademica = 'T') or (SituacaoAcademica = 'E')),
	FormaIngresso varchar(20) not null check ((FormaIngresso = 'enem') or (FormaIngresso 'vestibular')),
	primary key (Matricula)
);

Create Table Curso(
	Codigo integer not null check (codigo > 0),
	Nome varchar(50) not null,
	primary key (codigo)
);

Create Table Disciplina(
	Codigo int not null check (codigo > 0),
	Nome varchar(50) not null,
	Cargahoraria real not null check (Cargahoraria > 0),
	primary key (Codigo)
);

Create Table CursoDisciplina(
	CodigoCurso int references Curso(Codigo),
	CodigoDisciplina int references Disciplina(Codigo),
	PosicaoQSL int not null check (posicaoqsl > 0),
	primary key (CodigoCurso, CodigoDisciplina)
);

Create Table AlunoDisciplina(
	MatriculaAluno char(8) references Aluno(Matricula),
	CodigoCurso int references Curso(Codigo),
	CodigoDisciplina int references Disciplina(Codigo),
	Semestre char(6) not null,
	Frequencia real not null check (Frequencia >= 0),
	Nota real not null check ((nota >= 0) and (nota <= 10)),
	Situacao varchar(3) not null ((Situacao ='MAT') or (Situacao ='APR') or (Situacao ='REP') or (Situacao ='TRA') or (Situacao ='RPF') or (Situacao ='AE')),
	primary key (MatriculaAluno, CodigoCurso, CodigoDisciplina, Semestre)
);

Insert Into curso (Codigo, Nome) values (1123, 'TADS');
Insert Into curso (Codigo, Nome) values (999, 'TCE');

Insert Into Disciplina (Codigo, Nome, CargaHoraria) values (2, 'logica de programacao', 150);
Insert Into Disciplina (Codigo, Nome, CargaHoraria) values (5, 'fundamentos de matematica discreta', 50);
Insert Into Disciplina (Codigo, Nome, CargaHoraria) values (10, 'programacao orientada a objeto', 100);
Insert Into Disciplina (Codigo, Nome, CargaHoraria) values (13, 'banco de dados', 116.67);

Insert Into Aluno (Matricula, Nome, CPF, RG, Nascimento, Naturalidade, Nacionalidade, Filiacao, Genero, ObrigacaoEleitoral,
	ObrigacaoMilitar, Ingresso, Conclusao, SituacaoAcademica, FormaIngresso) values ('11230320', 'Marina', '03445175004', '9a99999999',
	'1996-02-11', 'Rio Grande', 'brasileira', 'Maria, Rui', 'F', true, null, '2018-07-15', 'R', 'vestibular');

Insert Into Aluno (Matricula, Nome, CPF, RG, Nascimento, Naturalidade, Nacionalidade, Filiacao, Genero, ObrigacaoEleitoral,
	ObrigacaoMilitar, Ingresso, Conclusao, SituacaoAcademica, FormaIngresso) values ('11230285', 'Borges', '03819881042', '9b99999999',
	'2000-05-10', 'Rio Grande', 'brasileira', 'Lucerema, Adalberto', 'M', true, true, '2018-01-15', 'R', 'vestibular');

Insert into CursoDisciplina (CodigoCurso, CodigoDisciplina, PosicaoQSL) values (1123, 2,1);
Insert into CursoDisciplina (CodigoCurso, CodigoDisciplina, PosicaoQSL) values (1123, 5,1);
Insert into CursoDisciplina (CodigoCurso, CodigoDisciplina, PosicaoQSL) values (1123, 10,2);
Insert into CursoDisciplina (CodigoCurso, CodigoDisciplina, PosicaoQSL) values (1123, 13,2);

Insert into AlunoDisciplina (MatriculaAluno,CodigoCurso,CodigoDisciplina,Semestre,Frequencia,Nota,Situacao) values ('11230320', 1123, 2, '2018-2', 85.6, 5.7, 'APR');
Insert into AlunoDisciplina (MatriculaAluno,CodigoCurso,CodigoDisciplina,Semestre,Frequencia,Nota,Situacao) values ('11230320', 1123, 5, '2018-2', 76.9, 8.9, 'AE');
Insert into AlunoDisciplina (MatriculaAluno,CodigoCurso,CodigoDisciplina,Semestre,Frequencia,Nota,Situacao) values ('11230320', 1123, 10, '2019-1', 0, 0, 'MAT');
Insert into AlunoDisciplina (MatriculaAluno,CodigoCurso,CodigoDisciplina,Semestre,Frequencia,Nota,Situacao) values ('11230320', 1123, 13, '2019-1', 0, 0, 'MAT');


Insert into AlunoDisciplina (MatriculaAluno,CodigoCurso,CodigoDisciplina,Semestre,Frequencia,Nota,Situacao) values ('11230285', 1123, 2, '2018-1', 85.3, 7.6, 'APR');
Insert into AlunoDisciplina (MatriculaAluno,CodigoCurso,CodigoDisciplina,Semestre,Frequencia,Nota,Situacao) values ('11230285', 1123, 5, '2018-1', 76.9, 5.6, 'APR');
Insert into AlunoDisciplina (MatriculaAluno,CodigoCurso,CodigoDisciplina,Semestre,Frequencia,Nota,Situacao) values ('11230285', 1123, 10, '2018-2', 100, 9.5, 'APR');
Insert into AlunoDisciplina (MatriculaAluno,CodigoCurso,CodigoDisciplina,Semestre,Frequencia,Nota,Situacao) values ('11230285', 1123, 13, '2018-2', 100, 4.6, 'REP');
Insert into AlunoDisciplina (MatriculaAluno,CodigoCurso,CodigoDisciplina,Semestre,Frequencia,Nota,Situacao) values ('11230285', 1123, 13, '2019-1', 0, 0, 'MAT');


























