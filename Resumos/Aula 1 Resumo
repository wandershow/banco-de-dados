instalar postgres
postgres - mainpg_hba_.conf
local	all	postgres	trust
// todas linha q n estão comentadas trocar para trust
DDL: Data Definition Language
sudo apt-get install posgresql
/etc/postgresql/9.6/main/pg_hba.conf
local	all	postgres			trust
local	all	all				trust
local	all	all		123.0.01/32	trust
local	all	all		::1/128		trust

sudo service postgresql restart
//entrar
psql -U postgres

//comandos 
	\?                mostrar comandos
	\q 		  sair
	\h 		  [comando] mostrar a sintaxe
	\i 		  pega um arquivo de texto e importa/executa todos os comandos dentro dele
	\o 		  
	\l 		  mostra bancos de dados cadastrados
	\c                define o titulo da tabela
	\h create table   (mostrar a sintaxe do create table)
	\dts              dados basicos
	\h drop table     exclui uma tabela
	\! clear          limpa
	\c bd1  	  conecta no banco
	\d 		  mostra tabelas cadastradas
	\d nome da tab    mostra a estrutura da tabela
	
// [ ] opção, escolha
// { } repetição
	
create table "(nome da tabela)" ( dados );

CREATE DATABASE cobaia1;


tipos de dados:
	integer/int  número inteiro: 1, 2 etc
	real número com virgula:  3,21
	char(1)  uma letra: 'a'
	boolean verdadeiro ou falso: true||false
	char(50) tem q ter 50 letra
	varchar(50) pode ter até 50 letras
	date  data
	time  hora
	timestamp  data e hora
	decimal(2) mais usado pra tratar sobre dinheiro, 123.45 > 12345 > 123.45 > '123.45' vai guardar número em texto.
	
/---------------------------------------------------------------------------------------------------------------\

DROP TABLE pessoa;

CREATE TABLE pessoa ( 
	cpf CHAR(11) NOT NULL,
	nome VARCHAR(100)NOT NULL,
	nascimento DATE NOT NULL CHECK (nascimento <= NOW()),
	genero char(1) NOT NULL DEFAULT 'M' CHECK ((genero = 'M') OR (genero = 'F')),
	PRIMARY KEY (cpf)
);	
	
DROP TABLE dependente;

CREATE TABLE dependente (
	cpf CHAR(11) NOT NULL,
	nome VARCHAR(100)NOT NULL,
	nascimento DATE NOT NULL CHECK (nascimento <= NOW()),
	genero char(1) NOT NULL DEFAULT 'M' CHECK ((genero = 'M') OR (genero = 'F')),
	responsavel CHAR(11) NOT NULL REFERENCES pessoa(cpf),
	PRIMARY KEY (cpf)
);

/---------------------------------------------------------------------------------------------------------------\
DROP TABLE escala;
DROP TABLE ponto;
DROP TABLE funcionario;

CREATE TABLE funcionario (
	cpf CHAR(11) NOT NULL,
	PRIMARY KEY (cpf),
);


CREATE TABLE ponto (
	funcionario CHAR(11) NOT NULL REFERENCES funcionario(cpf),
	data DATE NOT NULL DEFAULT NOW() CHECK (data <= NOW()),
	turno CHAR NOT NULL DEFAULT 'A' CHECK((turno = 'A') OR (turno= 'B') OR ( turno = 'C')),
	PRIMARY KEY (funcionario,data,turno)
);

CREATE TABLE escala (
	funcionario CHAR(11) NOT NULL REFERENCES funcionario(cpf),
	data DATE NOT NULL DEFAULT NOW() CHECK (data <= NOW()),
	turno CHAR NOT NULL DEFAULT 'A' CHECK((turno = 'A') OR (turno= 'B') OR ( turno = 'C') OR ( turno = 'D'),
	PRIMARY KEY (funcionario,data,turno)
);
/---------------------------------------------------------------------------------------------------------------\

//comando em caps.
//sempre usar aspas simples: '  '
//PK sempre embaixo.
//char( ) // tamanho fixo.
//varchar( ) // no máximo esse tamanho.
//default é caso venha em branco vira o valor escolhido.
	Comentar no código do banco:    --comentário
	
INSERT INTO pessoa (cpf, nome, nascimento, genero) VALUES ('12345678901', 'xuxu meneghel', '1960-07-23', 'F');

INSERT INTO pessoa dependente (cpf, nome, nascimento, genero,responsavel) VALUES ('12345678902', 'sasha meneghel', '2000-03-15', 'F', '12345678901');

INSERT INTO pessoa (cpf, nome, nascimento, genero) VALUES ('12345678903','rita cadillac', '1950-07-23', 'F');

-----------------------------------------------------------------------------------------------------------------------

2019-1

Create database pizzaria;
\c pizzaria

--Você cria as tabela em uma ordem das que não tem alguma FK.
--Na hora de criar tabelas que tem FK tem q ver se já criou a tabela q ela usa/puxa a PK.
--Apagar vai ser ao contrário, pois pode quase certamente dar erro, exemplo:
[
mesa
	codigo
	pk codigo

clientemesa
	fk codigo	
]
--Se apagar tabela mesa, na hora de apagar clientemesa vai dar erro pq a tabela tem um pk com erro (ele perde a referencia pois
-- deletou a tabela).

drop table pizzasabor;
drop table ingredientesabor;
drop table pizza;
drop table comanda;
drop table sabor;
drop table ingrediente;
drop table tamanho;
drop table mesa;

create table mesa (
	codigo int NOT NULL check (codigo > 0),
	Nome varchar(100) not null,
	primary key(codigo)
);

Create table tamanho (
	codigo int not null check (codigo > 0),
	nome char(1) not null default 'P' check ((nome = 'P') or (nome = 'M') or (nome = 'G') or (nome = 'F')),
	qtdesabores integer not null default 1 check ((qtdesabores > 0) and (qtdesabores <= 6)),
	primary key (codigo)
);

create table ingrediente (
	codigo int NOT NULL check (codigo > 0),
	Nome varchar(100) not null,
	primary key(codigo)
);

create table sabor (
	codigo int NOT NULL check (codigo > 0),
	Nome varchar(100) not null,
	preco real not null check (preco >= 0),
	primary key(codigo)
);

create table comanda (
	codigo int NOT NULL check (codigo > 0),
	codigomesa int references mesa(codigo),
	pago boolean not null default false,
	pagamento timestamp default NULL check (pagamento >= now()),
	primary key(codigo)
);

create table pizza (
	codigo int NOT NULL check (codigo > 0),
	codigocomanda int references comanda(codigo),
	codigotamanho int references tamanho(codigo),
	pago boolean not null default false,
	primary key(codigo)
);

create table ingredientesabor (
	codigosabor int references sabor(codigo),
	codigoingrediente int references ingrediente(codigo),
	primary key(codigosabor, codigoingrediente)
);

create table pizzasabor (
	codigopizza int references pizza(codigo),
	codigosabor int references sabor(codigo),
	primary key(codigopizza, codigosabor)
);

--Botando dados nas tabelas

Insert into mesa (codigo, nome) values (1, 'mesa 1');
Insert into mesa (codigo, nome) values (2, 'mesa 2');
Insert into mesa (codigo, nome) values (3, 'mesa 5');
Insert into mesa (codigo, nome) values (6, 'mesa 7');
Insert into mesa (codigo, nome) values (7, 'mesa 3');
Insert into mesa (codigo, nome) values (8, 'mesa 4');
Insert into mesa (codigo, nome) values (10, 'mesa 6');

Insert into tamanho (codigo, nome, qtdesabores) values (1, 'P', 2);
Insert into tamanho (codigo, nome, qtdesabores) values (2, 'M', 2);
Insert into tamanho (codigo, nome, qtdesabores) values (4, 'G', 4);
Insert into tamanho (codigo, nome, qtdesabores) values (7, 'F', 6);

Insert into ingrediente (codigo, nome) values (1, 'molho de tomate');
Insert into ingrediente (codigo, nome) values (2, 'queijo parmesao');
Insert into ingrediente (codigo, nome) values (3, 'queijo parmesao');
Insert into ingrediente (codigo, nome) values (4, 'queijo gorgonzola');
Insert into ingrediente (codigo, nome) values (5, 'queijo mussarela');
Insert into ingrediente (codigo, nome) values (6, 'tomate');
Insert into ingrediente (codigo, nome) values (7, 'milho');
Insert into ingrediente (codigo, nome) values (8, 'bacon');
Insert into ingrediente (codigo, nome) values (9, 'galinha');
Insert into ingrediente (codigo, nome) values (10, 'calabresa');

Insert into sabor (codigo, nome, preco) values (1, 'queijo mussarela', 40.00);
Insert into sabor (codigo, nome, preco) values (2, 'tres queijos', 55.00);
Insert into sabor (codigo, nome, preco) values (3, 'frango', 65.00);

Insert into comanda (codigo, codigomesa) values (1, 6);

Insert into ingredientesabor (codigosabor, codigoingrediente) values (1, 1); --o sabor 1 tem o ingrediente 1
Insert into ingredientesabor (codigosabor, codigoingrediente) values (1, 4); --o sabor 1 também tem o ingrdiente 4
Insert into ingredientesabor (codigosabor, codigoingrediente) values (2, 1);
Insert into ingredientesabor (codigosabor, codigoingrediente) values (2, 2);
Insert into ingredientesabor (codigosabor, codigoingrediente) values (2, 3);
Insert into ingredientesabor (codigosabor, codigoingrediente) values (2, 4);
Insert into ingredientesabor (codigosabor, codigoingrediente) values (3, 1);
Insert into ingredientesabor (codigosabor, codigoingrediente) values (3, 9);
Insert into ingredientesabor (codigosabor, codigoingrediente) values (3, 7);
Insert into ingredientesabor (codigosabor, codigoingrediente) values (3, 4);

insert into pizza (codigo, codigocomanda, codigotamanho) values (3, 1, 7);

insert into pizzasabor (codigopizza, codigosabor) values (3, 2);
insert into pizzasabor (codigopizza, codigosabor) values (3, 3);

-- atualizando a comanda, falando que ela foi paga.
update comanda set pago = true, pagamento = now() where codigo = 1;

Anotações:

NOT NULL ela não pode ser nula/vazia
"check (codigo > 0)" além de não ser null ele tem q ser positivo.
default 'P' caso não tenha um valor vai por 'P'
references nome_tabela(nome_atributo/dado)   ||  references pessoa(cpf)
timestamp default now() check (pagamento <= now())  ele pega dia e hora do sistema naquele momento e verifica se é no momento.
Para por um dado na tabela você usa "insert into" e diz os valores "values", não precisa ser na ordem ex:
[
Insert into mesa (codigo, nome) values (1, 'mesa 1');
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Insert into mesa (nome, codigo) values ('mesa 1', 1);
]
Na hora de por dados nas tabelas, os que não forem preenchido e tiverem default, o banco vai por o valor que foi posto no default















